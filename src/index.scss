/* Playfair Display Google Font */
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap');
// Roboto Google Font
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,400;1,500;1,700;1,900&display=swap');
// Open Sans Google Font
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap');

:root {
  font-synthesis: none;
  // text-rendering: optimizeLegibility;

  /* Color set #1 */
  --blue: rgb(0 40 104);
  --orange: rgb(255 103 0);
  --green: rgb(91 132 4);
  --silver: rgb(192 192 192);
  --gray: rgb(128 128 128);

  /* Color set #2 */
  --light-blue: rgb(0 41 164);
  --light-orange: rgb(255 113 60);
  --light-green: rgb(91 152 4);
  --light-silver: rgb(236 236 236);
  --light-gray: rgb(237 237 237);

  // Blue alpha variations
  --alpha-blue-1: rgb(0 40 104 / 10%);
  --alpha-blue-2: rgb(0 40 104 / 20%);
  --alpha-blue-3: rgb(0 40 104 / 30%);
  --alpha-blue-4: rgb(0 40 104 / 40%);
  --alpha-blue-5: rgb(0 40 104 / 50%);
  --alpha-blue-6: rgb(0 40 104 / 60%);
  --alpha-blue-7: rgb(0 40 104 / 70%);
  --alpha-blue-8: rgb(0 40 104 / 80%);

  // Orange alpha variations
  --alpha-orange-1: rgb(255 113 60 / 10%);
  --alpha-orange-2: rgb(255 113 60 / 20%);
  --alpha-orange-3: rgb(255 113 60 / 30%);
  --alpha-orange-4: rgb(255 113 60 / 40%);
  --alpha-orange-5: rgb(255 113 60 / 50%);
  --alpha-orange-6: rgb(255 113 60 / 60%);
  --alpha-orange-7: rgb(255 113 60 / 70%);
  --alpha-orange-8: rgb(255 113 60 / 80%);
  --alpha-orange-9: rgb(255 113 60 / 90%);

  // Gray alpha variations
  --alpha-gray-1: rgb(128 128 128 / 10%);
  --alpha-gray-2: rgb(128 128 128 / 20%);
  --alpha-gray-3: rgb(128 128 128 / 30%);
  --alpha-gray-4: rgb(128 128 128 / 40%);
  --alpha-gray-5: rgb(128 128 128 / 50%);
  --alpha-gray-6: rgb(128 128 128 / 60%);
  --alpha-gray-7: rgb(128 128 128 / 70%);

  // Green alpha variations
  --alpha-green-1: rgb(91 152 4 / 10%);
  --alpha-green-2: rgb(91 152 4 / 20%);
  --alpha-green-3: rgb(91 152 4 / 30%);
  --alpha-green-4: rgb(91 152 4 / 40%);
  --alpha-green-5: rgb(91 152 4 / 50%);
  --alpha-green-6: rgb(91 152 4 / 60%);
  --alpha-green-7: rgb(91 152 4 / 70%);

  // Silver alpha variations
  --alpha-silver-1: rgb(192 192 192 / 10%);
  --alpha-silver-2: rgb(192 192 192 / 20%);
  --alpha-silver-3: rgb(192 192 192 / 30%);

  /* General colors */
  --white: rgb(255 255 255);
  --black: rgb(0 0 0);
  --red: rgb(255 0 0);
  --dark: rgb(51 51 51);

  // Dark alpha variations
  --alpha-dark-1: rgb(51 51 51 / 10%);
  --alpha-dark-2: rgb(51 51 51 / 20%);
  --alpha-dark-3: rgb(51 51 51 / 30%);
  --alpha-dark-4: rgb(51 51 51 / 40%);
  --alpha-dark-5: rgb(51 51 51 / 50%);
  --alpha-dark-6: rgb(51 51 51 / 60%);

  // Alert colors
  --alert-success: rgb(91 132 4);
  --alert-error: rgb(255 0 0);
  --alert-warning: rgb(255 103 0);
  --alert-info: rgb(0 40 104);

  // Transparent
  --transparent: transparent;
  --transparent-1: rgb(0 0 0 / 10%);
  --transparent-2: rgb(0 0 0 / 20%);
  --transparent-3: rgb(0 0 0 / 30%);
  --transparent-4: rgb(0 0 0 / 40%);
  --transparent-5: rgb(0 0 0 / 50%);
  --transparent-6: rgb(0 0 0 / 60%);
  --transparent-7: rgb(0 0 0 / 70%);
  --transparent-8: rgb(0 0 0 / 80%);

  // Gradients
  --gradient-1: linear-gradient(to bottom, rgb(0 40 104 / 80%), rgb(0 40 104 / 100%));
  --gradient-2: linear-gradient(to bottom, rgb(255 103 0 / 80%), rgb(255 103 0 / 100%));
  --gradient-3: linear-gradient(to bottom, rgb(91 132 4 / 80%), rgb(91 132 4 / 100%));
  --gradient-4: linear-gradient(to bottom, rgb(192 192 192 / 80%), rgb(192 192 192 / 100%));
  --gradient-5: linear-gradient(to bottom, rgb(128 128 128 / 80%), rgb(128 128 128 / 100%));
  --gradient-6: radial-gradient(rgb(91 132 4 / 30%) 0%, rgb(91 132 4 / 100%) 100%);
  --gradient-7:
    radial-gradient(
      rgb(0 40 104 / 80%) 20%,
      rgb(0 40 104 / 70%) 50%,
      rgb(0 40 104 / 80%) 80%,
      rgb(0 40 104 / 80%) 100%
    );
  --gradient-8:
    radial-gradient(
      white 1%,
      transparent 55%
    );

  /* Shadows */
  --blue-shadow-1: rgb(0 40 104 / 60%);
  --white-shadow-1: rgb(202 202 202 / 100%);

  // Max width
  --max-width: 800px;
  --max-width-lg: 1024px;
  --mobile-max-width: var(--size-130);

  /* Spacing */

  @for $i from 1 through 15 {
    --spacing-#{$i}: #{$i * 9}px;
  }

  /* Smaller spacing */

  @for $i from 1 through 10 {
    --spacing-#{$i}-half: #{$i * 5}px;
  }

  /* Even smaller spacing */

  @for $i from 1 through 10 {
    --spacing-#{$i}-quarter: #{$i * 3}px;
  }

  /* Sizes */
  @for $i from 1 through 200 {
    --size-#{$i}: #{$i * 4}px;
  }

  /* Smaller sizes */
  @for $i from 1 through 40 {
    --size-#{$i}-half: #{$i * 2}px;
  }

  /* Even smaller sizes */
  @for $i from 1 through 40 {
    --size-#{$i}-quarter: #{$i * 1}px;
  }

  // Timings
  --timing-slowest: 1.2s;
  --timing-slow: 0.6s;
  --timing-medium: 0.4s;
  --timing-fast: 0.2s;

  // Heights
  --header-height: var(--size-15);

  scroll-behavior: smooth;
}

:target {
  scroll-margin-top: calc(var(--header-height) + var(--spacing-2));
}

html {
  height: 100%;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a,
button {
  cursor: pointer;
}

:root,
button {
  font-family: "Gotham Book", Lato, sans-serif;
}

/* Fonts */

@font-face {
  font-family: "Expressa Regular";
  src:
    url("assets/fonts/expressa-serial-regular.woff2") format("woff2"),
    url("assets/fonts/expressa-serial-regular.ttf") format("truetype");
}

@font-face {
  font-family: "Gotham Bold";
  src:
    url("assets/fonts/gotham-bold.woff2") format("woff2"),
    url("assets/fonts/gotham-bold.woff") format("woff");
}

@font-face {
  font-family: "Gotham Book";
  src:
    url("assets/fonts/gotham-book.woff2") format("woff2"),
    url("assets/fonts/gotham-book.woff") format("woff");
}

@font-face {
  font-family: Lato;
  src:
    url("assets/fonts/lato-regular.woff2") format("woff2"),
    url("assets/fonts/lato-regular.woff") format("woff");
}

// useDimSection hook styles
section {
  transition: filter var(--timing-medium) ease-in-out;
}

.dim-section {
  position: sticky;
  filter: brightness(0.8);
  z-index: -1;
}
